@use "sass:math";
@use "sass:map";
@use "sass:color";
@use "../mixins";

$types: primary, success, warning, danger, error, info;

$light: #fff;
$dark: #000;
$colors: () !default;
$colors: map.deep-merge(
  (
    "white": #ffffff,
    "black": #000000,
    "primary": (
      "base": #626aef,
      "text": $light,
    ),
    "success": (
      "base": #67c23a,
      "text": $light,
    ),
    "warning": (
      "base": #474035,
      "text": $light,
    ),
    "danger": (
      "base": #f56c6c,
      "text": $light,
    ),
    "error": (
      "base": #f56c6c,
      "text": $light,
    ),
    "info": (
      "base": #909399,
      "text": $light,
    ),
  ),
  $colors
);

// primary 1 light #fff|#000
@mixin set-color-mix-level($type, $number, $mode, $mix-color) {
  $colors: map.deep-merge(
    (
      $type: (
        "#{$mode}-#{$number}":
          color.mix(
            $mix-color,
            map.get($colors, $type, "base"),
            math.percentage(math.div($number, 10))
          ),
      ),
    ),
    $colors
  ) !global;
}

@each $type in $types {
  @for $i from 1 through 9 {
    @include set-color-mix-level($type, $i, "light", $light);
  }
}

@each $type in $types {
  @include set-color-mix-level($type, 2, "dark", $dark);
}

$color-white: map.get($colors, "white") !default;
$color-black: map.get($colors, "black") !default;
$color-primary: map.get($colors, "primary", "base") !default;
$color-success: map.get($colors, "success", "base") !default;
$color-warning: map.get($colors, "warning", "base") !default;
$color-danger: map.get($colors, "danger", "base") !default;
$color-error: map.get($colors, "error", "base") !default;
$color-info: map.get($colors, "info", "base") !default;

$bg-color: () !default;
$bg-color: map.merge(
  (
    "page": #0a0a0a,
    "": #fff,
    "overlay": #1d1e1f,
  ),
  $bg-color
);

// border
$border-width: 1px !default;
$border-style: solid !default;
$border-color: () !default;
$border-color: map.merge(
  (
    "": #dcdfe6,
    "light": #e4e7ed,
    "lighter": #ebeef5,
    "extra-light": #f2f6fc,
    "dark": #d4d7de,
    "darker": #cdd0d6,
    "primary": #626aef,
  ),
  $border-color
);
// fill
$fill-color-base: #fafcff;

// text
$text-color-base: #3f51b5;
$text-color: () !default;
$text-color: map.merge(
  (
    "primary": rgba($text-color-base, 0.95),
    "regular": rgba($text-color-base, 0.85),
    "secondary": rgba($text-color-base, 0.65),
    "placeholder": rgba($text-color-base, 0.55),
    "disabled": rgba($text-color-base, 0.4),
  ),
  $text-color
);

$light-text-color: () !default;
$light-text-color: map.merge(
  (
    "title": #303133,
    "second": #606266,
    "subtext": #909399,
    "placeholder": #444444,
    "disabled": #c0c4cc,
  ),
  $light-text-color
);

// font-size
$font-size: () !default;
$font-size: map.merge(
  (
    "extra-large": 20px,
    "large": 18px,
    "medium": 16px,
    "base": 14px,
    "small": 13px,
    "extra-small": 12px,
  ),
  $font-size
);

// border-radius
$border-radius: () !default;
$border-radius: map.merge(
  (
    "small": 2px,
    "base": 4px,
    "large": 6px,
    "round": 20px,
    "circle": 100%,
  ),
  $border-radius
);

// padding
$padding-hv: () !default;
$padding-hv: map.merge(
  (
    small: 5px 11px,
    base: 8px 15px,
    large: 12px 19px,
  ),
  $padding-hv
);

// mask
$mask-color: () !default;
$mask-color: map.merge(
  (
    "": rgba(255, 255, 255, 0.8),
    "extra-light": rgba(255, 255, 255, 0.3),
  ),
  $mask-color
);

$loading: () !default;
$loading: map.merge(
  (
    "spinner-size": 42px,
    "fullscreen-spinner-size": 50px,
  ),
  $loading
);

$transition-duration: () !default;
$transition-duration: map.merge(
  (
    "default": 0.3s,
    "fast": 0.2s,
  ),
  $transition-duration
);

$fill-color: () !default;
$fill-color: map.merge(
  (
    "": #f0f2f5,
    "light": #f5f7fa,
    "lighter": #fafafa,
    "extra-light": #fafcff,
    "dark": #ebedf0,
    "darker": #e6e8eb,
    "blank": #ffffff,
  ),
  $fill-color
);
